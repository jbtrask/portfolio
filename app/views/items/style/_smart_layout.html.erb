<%
	previous_ratio = nil
	ASPECT_RATIOS.each do |layout, ratio| 
		ratio = ratio_from_value(ratio) if !ratio.nil? && !ratio.index(".").nil?
		min_layout = layout_info("minimum", { :width => GRID_MIN, :height => (GRID_MIN.to_f * GRID_ASPECT_RATIO).round }, MINIMUM_LAYOUT[layout][0], MINIMUM_LAYOUT[layout][1], MINIMUM_LAYOUT[layout][2], MINIMUM_LAYOUT[layout][3] )
		min_height = min_width =  MOBILE_LIMIT	
		min_height = min_layout[:corrected_required_height] > min_height ? min_layout[:corrected_required_height] : min_height
		min_width = min_layout[:corrected_required_width] > min_width ? min_layout[:corrected_required_width] : min_width
		if !ratio.nil? && value_from_ratio(ratio) <= 1.0
%>
<link rel="stylesheet" type="text/css" href="<%= stylesheet_path(layout) %>" media="only screen and (min-height: <%= min_height + 1 %>px)<%= previous_ratio.nil? ? "" : " and (min-aspect-ratio: " + previous_ratio + ")" %><%= ratio.nil? ? "" : " and (max-aspect-ratio: " + ratio + ")" %>" > 
<link rel="stylesheet" type="text/css" href="<%= stylesheet_path("mobile_portrait") %>" media="only screen and (max-height: <%= min_height %>px)<%= previous_ratio.nil? ? "" : " and (min-aspect-ratio: " + previous_ratio + ")" %><%= ratio.nil? ? "" : " and (max-aspect-ratio: " + ratio + ")" %>" >

<% 
		else 
%>
<link rel="stylesheet" type="text/css" href="<%= stylesheet_path(layout) %>" media="only screen and (min-width: <%= min_width + 1 %>px)<%= previous_ratio.nil? ? "" : " and (min-aspect-ratio: " + previous_ratio + ")" %><%= ratio.nil? ? "" : " and (max-aspect-ratio: " + ratio + ")" %>" > 
<link rel="stylesheet" type="text/css" href="<%= stylesheet_path("mobile_landscape") %>" media="only screen and (max-width: <%= min_width %>px)<%= previous_ratio.nil? ? "" : " and (min-aspect-ratio: " + previous_ratio + ")" %><%= ratio.nil? ? "" : " and (max-aspect-ratio: " + ratio + ")" %>" >

<%
		end
		previous_ratio = ratio
	end
%>
