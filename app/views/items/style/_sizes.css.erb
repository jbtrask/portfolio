<% @width_count = item_count.map{|ic| [ic[0].nil? ? nil : (ic[0] * (1 + (100 - width).to_f / 100.0)).floor, ic[1]]}.reverse %>
<% @height_count = item_count.map{|ic| [ic[0].nil? ? nil : (ic[0] * (1 + (100 - height).to_f / 100.0)).floor, ic[1]]}.reverse %>

@media only screen and (min-height: <%= @height_count[1][0] + 1 %>px) {
	.grid_cell {
		height: <%= 100.0 / @height_count.first[1].to_f %>%;
    min-height: <%= 100.0 / @height_count.first[1].to_f %>%;
	}
	#v-size:after {
		content: "vertical: <%= @height_count.first[1] %>"
	}
}

<% (1..height.size - 2).each do |idx| %>
	@media only screen and (min-height: <%= @height_count[idx + 1][0] + 1 %>px) and (max-height: <%= @height_count[idx][0] %>px) {
		.grid_cell {
			height: <%= 100.0 / @height_count[idx][1].to_f %>%;
      min-height: <%= 100.0 / @height_count[idx][1].to_f %>%;
		}
		#v-size:after {
			content: "vertical: <%= @height_count[idx][1] %>"
		}
	}
<% end %>

@media only screen and (max-height: <%= @height_count.last[0] %>px) {
	.grid_cell {
		height: <%= 100.0 / @height_count.last[1].to_f %>%;
    min-height: <%= 100.0 / @height_count.last[1].to_f %>%;
	}
	#v-size:after {
		content: "vertical: <%= @height_count.last[1] %>"
	}
}

@media only screen and (min-width: <%= @width_count[1][0] + 1 %>px) {
	.grid_cell {
		width: <%= 100.0 / @width_count.first[1].to_f %>%;
    min-width: <%= 100.0 / @width_count.first[1].to_f %>%;
	}
	#h-size:after {
		content: "horizontal: <%= @width_count.first[1] %>"
	}
}

<% (1..width.size - 2).each do |idx| %>
	@media only screen and (min-width: <%= @width_count[idx + 1][0] + 1 %>px) and (max-width: <%= @width_count[idx][0] %>px) {
		.grid_cell {
			width: <%= 100.0 / @width_count[idx][1].to_f %>%;
      min-width: <%= 100.0 / @width_count[idx][1].to_f %>%;
		}
		#h-size:after {
			content: "horizontal: <%= @width_count[idx][1] %>"
		}
	}
<% end %>

@media only screen and (max-width: <%= @width_count.last[0] %>px) {
	.grid_cell {
		width: <%= 100.0 / @width_count.last[1].to_f %>%;
    min-width: <%= 100.0 / @width_count.last[1].to_f %>%;
	}
	#h-size:after {
		content: "horizontal: <%= @width_count.last[1] %>"
	}
}

